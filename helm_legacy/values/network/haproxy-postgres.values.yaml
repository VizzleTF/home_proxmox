# HAProxy Configuration for PostgreSQL Load Balancing
# Порт 5433 - для записи (только мастер) 
# Порт 5434 - для чтения (мастер + реплика)

replicaCount: 1

image:
  repository: haproxy
  tag: "2.9-alpine"
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  ports:
    - name: postgres-write
      port: 5433
      targetPort: 5433
      protocol: TCP
    - name: postgres-read
      port: 5434
      targetPort: 5434
      protocol: TCP

# HAProxy конфигурация
config: |
  global
    daemon
    maxconn 256
    log stdout local0
    
  defaults
    mode tcp
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    option tcplog
    log global
    
  # PostgreSQL Write Proxy (только мастер)
  frontend postgres_write_frontend
    bind *:5433
    default_backend postgres_write_backend
    
  backend postgres_write_backend
    balance source
    option tcp-check
    tcp-check connect
    tcp-check send-binary 00000008 # Длина пакета
    tcp-check send-binary 04d2162f # SSLRequest
    server patroni-postgres-01 10.11.12.247:5432 check inter 3000 rise 2 fall 3
    
  # PostgreSQL Read Proxy (мастер + реплика)  
  frontend postgres_read_frontend
    bind *:5434
    default_backend postgres_read_backend
    
  backend postgres_read_backend
    balance roundrobin
    option tcp-check
    tcp-check connect
    tcp-check send-binary 00000008 # Длина пакета
    tcp-check send-binary 04d2162f # SSLRequest
    server patroni-postgres-01 10.11.12.247:5432 check inter 3000 rise 2 fall 3
    server patroni-postgres-02 10.11.12.245:5432 check inter 3000 rise 2 fall 3

# Resource limits
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Health checks
livenessProbe:
  tcpSocket:
    port: 5433
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  tcpSocket:
    port: 5433
  initialDelaySeconds: 5
  periodSeconds: 5

# Labels for monitoring
podLabels:
  app: haproxy-postgres
  component: database-proxy

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 65534
  fsGroup: 65534

# Node selector for specific nodes
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {} 