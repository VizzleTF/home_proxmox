# CrowdSec Security Engine Configuration
# Основная конфигурация для развёртывания CrowdSec в Kubernetes кластере
# Документация: https://docs.crowdsec.net/u/getting_started/installation/kubernetes

# Основные настройки агента
agent:
  # Указываем runtime контейнеров - containerd для большинства k8s кластеров
  container_runtime: containerd
  
  # Acquisition - указываем какие поды мониторить
  acquisition:
    # Мониторинг логов Nginx Ingress Controller
    - namespace: ingress-nginx
      podName: ingress-nginx-controller-*
      program: nginx
    
    # Мониторинг системных подов
    - namespace: kube-system
      podName: "*"
      program: syslog

  # Переменные окружения для агента
  env:
    # Устанавливаем коллекции для анализа логов
    - name: COLLECTIONS
      value: "crowdsecurity/nginx crowdsecurity/k8s-audit crowdsecurity/linux"
    
    # Уровень логирования
    - name: CROWDSEC_LOG_LEVEL
      value: "info"

# Настройки Local API (LAPI)
lapi:
  # Включаем защищённую связь между компонентами
  tls:
    enabled: true
    
  # Переменные окружения для LAPI
  env:
    # Уровень логирования
    - name: CROWDSEC_LOG_LEVEL
      value: "info"
      
    - name: COLLECTIONS
      value: "crowdsecurity/nginx crowdsecurity/k8s-audit crowdsecurity/linux"
    
    # Настройки для подключения к CrowdSec Console
    - name: ENROLL_KEY
      valueFrom:
        secretKeyRef:
          name: crowdsec-secret
          key: enroll-key
    - name: ENROLL_INSTANCE_NAME
      value: "home-k8s-cluster"
    - name: ENROLL_TAGS
      value: "k8s linux homelab"

# Настройки ресурсов
resources:
  limits:
    memory: "256Mi"
    cpu: "200m"
  requests:
    memory: "128Mi"
    cpu: "100m"

# Настройки хранения данных
persistence:
  config:
    enabled: true
    size: 1Gi
    accessModes:
      - ReadWriteOnce
  data:
    enabled: true
    size: 1Gi
    accessModes:
      - ReadWriteOnce

# Настройки сервиса
service:
  type: ClusterIP
  port: 8080

# Настройки метрик (для мониторинга)
metrics:
  enabled: true
  serviceMonitor:
    enabled: false  # Включить при наличии Prometheus Operator

# Настройки безопасности
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

podSecurityContext:
  seccompProfile:
    type: RuntimeDefault

# NodeSelector для размещения подов (опционально)
nodeSelector: {}

# Tolerations для размещения на нодах с taint (опционально)
tolerations: []

# Affinity правила для размещения подов (опционально)
affinity: {} 