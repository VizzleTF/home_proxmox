# Default values for cluster-status.
replicaCount: 2

image:
  repository: ghcr.io/vizzletf/cluster-status-app
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "10"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/enable-cors: "true"
  hosts:
    - host: status.vakaf.space
      paths:
        - path: /status
          pathType: Prefix
  tls:
   - secretName: cluster-status-tls
     hosts:
       - status.vakaf.space

resources:
  requests:
    memory: "256Mi"
    cpu: "500m"
  limits:
    memory: "512Mi"
    cpu: "1500m"

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 6
  targetCPUUtilizationPercentage: 30

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: "app"
                operator: In
                values:
                  - "cluster-status-app"
          topologyKey: "kubernetes.io/hostname"

env:
  - name: PROXMOX_API_URL
    valueFrom:
      secretKeyRef:
        name: proxmox-credentials
        key: api-url
  - name: PROXMOX_USER
    valueFrom:
      secretKeyRef:
        name: proxmox-credentials
        key: username
  - name: PROXMOX_PASSWORD
    valueFrom:
      secretKeyRef:
        name: proxmox-credentials
        key: password
  - name: PROXMOX_TASK_TIMEOUT
    value: "300"
  - name: KUBECONFIG
    value: /root/.kube/config
  - name: REDIS_HOST
    value: "cluster-status-app-redis"
  - name: REDIS_PORT
    value: "6379"
  - name: REDIS_ENABLED
    value: "true"

volumes:
  - name: kubeconfig
    secret:
      secretName: kubeconfig
      items:
        - key: config
          path: config

volumeMounts:
  - name: kubeconfig
    mountPath: /root/.kube
    readOnly: true

probes:
  liveness:
    httpGet:
      path: /healthz
      port: 8080
    initialDelaySeconds: 15
    periodSeconds: 20
  readiness:
    httpGet:
      path: /ready
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 10

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false
  master:
    persistence:
      enabled: false

config:
  server:
    port: 8080
    readTimeout: 5s
    writeTimeout: 10s
    idleTimeout: 15s
  redis:
    poolSize: 100
  kubernetes:
    config: "/root/.kube/config"
  proxmox:
    apiUrl: "https://10.11.12.51:8006/api2/json"
    insecureSkipVerify: true
    taskTimeout: "300s"
    vsmDomainType: 1
  workerPool:
    size: 10
  cache:
    helmReleasesTTL: 10s
    nodeStatusesTTL: 10s
    proxmoxNodesTTL: 10s
    podStatusesTTL: 10s
  handler:
    timeout: 30s
  logging:
    level: "info"
    format: "json"
  cache:
    ttl: 10s