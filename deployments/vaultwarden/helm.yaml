---
# Source: vaultwarden/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vaultwarden-svc
  namespace: vaultwarden
  labels:
    app.kubernetes.io/component: vaultwarden
    helm.sh/chart: vaultwarden-0.22.2
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden-release
    app.kubernetes.io/version: "1.30.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: vaultwarden/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: vaultwarden-release
  namespace: vaultwarden
  labels:
    app.kubernetes.io/component: vaultwarden
    helm.sh/chart: vaultwarden-0.22.2
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden-release
    app.kubernetes.io/version: "1.30.3"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  SMTP_PASSWORD: ""
  SMTP_USERNAME: ""
  ADMIN_TOKEN: "JGFyZ29uMmlkJHY9MTkkbT0xOTQ1Nix0PTIscD0xJFZreDFWa0U0Um1oRE1VaHdObTlZVmxoUFFrVk9aazFZYzFkdVNEZEdSVll6ZDBZNVprZ3dhVmcwWXowJFBLK2gxQU5DYnp6bUVLYWlRZkNqV3craFdGYU1LdkxoRzJQalJhbkg1S2s="
---
# Source: vaultwarden/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: vaultwarden-release
  namespace: vaultwarden
  labels:
    app.kubernetes.io/component: vaultwarden
    helm.sh/chart: vaultwarden-0.22.2
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden-release
    app.kubernetes.io/version: "1.30.3"
    app.kubernetes.io/managed-by: Helm
data:
  DOMAIN: ""
  WEBSOCKET_ENABLED: "true"
  WEBSOCKET_ADDRESS: "0.0.0.0"
  WEBSOCKET_PORT: "3012"
  ROCKET_ADDRESS: "0.0.0.0"
  ROCKET_PORT: "8080"
  ROCKET_WORKERS: "10"
  SHOW_PASSWORD_HINT: "false"
  SIGNUPS_ALLOWED: "true"
  INVITATIONS_ALLOWED: "true"
  SIGNUPS_VERIFY: "true"
  WEB_VAULT_ENABLED: "true"
  DB_CONNECTION_RETRIES: "15"
  DATABASE_MAX_CONNS: "10"
  INVITATION_ORG_NAME: "Vaultwarden"
  ICON_BLACKLIST_NON_GLOBAL_IPS: "true"
  IP_HEADER: "X-Real-IP"
  ORG_EVENTS_ENABLED: "false"
  ORG_GROUPS_ENABLED: "false"
  SENDS_ALLOWED: "true"
  EMERGENCY_ACCESS_ALLOWED: "true"
  EMERGENCY_NOTIFICATION_REMINDER_SCHEDULE: "0 3 * * * *"
  EMERGENCY_REQUEST_TIMEOUT_SCHEDULE: "0 7 * * * *"
  EXTENDED_LOGGING: "true"
  LOG_TIMESTAMP_FORMAT: "%Y-%m-%d %H:%M:%S.%3f"
  ICON_SERVICE: "internal"
  ICON_REDIRECT_CODE: "302"
  INVITATION_EXPIRATION_HOURS: "120"
  REQUIRE_DEVICE_EMAIL: "false"
  TRASH_AUTO_DELETE_DAYS: ""
  EMAIL_CHANGE_ALLOWED: "true"
  ADMIN_RATELIMIT_SECONDS: "300"
  ADMIN_RATELIMIT_MAX_BURST: "3"
---
# Source: vaultwarden/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vaultwarden-release
  namespace: vaultwarden
  labels:
    app.kubernetes.io/component: vaultwarden
    helm.sh/chart: vaultwarden-0.22.2
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden-release
    app.kubernetes.io/version: "1.30.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create","delete","get","list","patch","update","watch"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create","delete","get","list","patch","update","watch"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get","list","watch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
---
# Source: vaultwarden/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vaultwarden-release
  namespace: vaultwarden
  labels:
    app.kubernetes.io/component: vaultwarden
    helm.sh/chart: vaultwarden-0.22.2
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden-release
    app.kubernetes.io/version: "1.30.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: vaultwarden-release
subjects:
- kind: ServiceAccount
  name: vaultwarden-svc
---
# Source: vaultwarden/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden-release
  namespace: vaultwarden
  labels:
    app.kubernetes.io/component: vaultwarden
    helm.sh/chart: vaultwarden-0.22.2
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden-release
    app.kubernetes.io/version: "1.30.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: "ClusterIP"
  selector:
    app.kubernetes.io/component: vaultwarden
  ports:
    - name: "http"
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: "websocket"
      port: 3012
      protocol: TCP
      targetPort: 3012
  ipFamilyPolicy: SingleStack
---
# Source: vaultwarden/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vaultwarden-release
  namespace: vaultwarden
  labels:
    app.kubernetes.io/component: vaultwarden
    helm.sh/chart: vaultwarden-0.22.2
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden-release
    app.kubernetes.io/version: "1.30.3"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: vaultwarden
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: vaultwarden
      app.kubernetes.io/name: vaultwarden
      app.kubernetes.io/instance: vaultwarden-release
  template:
    metadata:
      labels:
        app.kubernetes.io/component: vaultwarden
        app.kubernetes.io/name: vaultwarden
        app.kubernetes.io/instance: vaultwarden-release
      annotations:
        checksum/config: 98fc6eaaa422809aa42fb378b32960b781a9756b
        checksum/secret: 4690334d2f932945f5c157641d282a37bdecd1c5
    spec:
      
      containers:
        - image: docker.io/vaultwarden/server:1.30.3-alpine
          imagePullPolicy: IfNotPresent
          name: vaultwarden
          envFrom:
            - configMapRef:
                name: vaultwarden-release
          env:
            - name: ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: vaultwarden-release
                  key: ADMIN_TOKEN
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 3012
              name: websocket
              protocol: TCP
          resources:
                  {}
          livenessProbe:
            httpGet:
              path: /alive
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /alive
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
      serviceAccountName: vaultwarden-svc
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
---
# Source: vaultwarden/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vaultwarden-release
  namespace: vaultwarden
  labels:
    app.kubernetes.io/component: vaultwarden
    helm.sh/chart: vaultwarden-0.22.2
    app.kubernetes.io/name: vaultwarden
    app.kubernetes.io/instance: vaultwarden-release
    app.kubernetes.io/version: "1.30.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    ingress.kubernetes.io/rewrite-target: /
    ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Request-Id: $req_id";
    nginx.ingress.kubernetes.io/connection-proxy-header: "keep-alive"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/limit-connections: "25"
    nginx.ingress.kubernetes.io/limit-rps: "15"
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "10"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
spec:
  ingressClassName: "openshift-default"
  tls:
    - hosts:
        - "pass.vakaf.space"
      secretName: 
  rules:
    - host: "pass.vakaf.space"
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: vaultwarden-release
              port:
                name: "http"
        - path: /notifications/hub
          pathType: Exact
          backend:
            service:
              name: vaultwarden-release
              port:
                name: "websocket"